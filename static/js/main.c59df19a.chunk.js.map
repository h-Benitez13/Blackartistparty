{"version":3,"sources":["Images/BAP.jpg","logo.svg","Components/Navbar/index.js","Pages/Landing.js","Pages/Shop.js","Pages/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","react_router_dom","to","Home","Navbar_Navbar","src","BAP","alt","Shop","logo","href","target","rel","NoMatch","App","basename","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8MCG3BC,EAAS,WACpB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,4DAA4DE,GAAG,SAC7EL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,SAEFH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,4DAA4DE,GAAG,SAC7EL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,SAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,WAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,YAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,iBCCOG,MAff,WACE,OACEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACK,EAAD,MACAP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKM,IAAKC,IAAKC,IAAI,+CCoBdC,MAzBf,WACE,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACK,EAAD,MACAP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,OAAKM,IAAKI,IAAMT,UAAU,WAAWO,IAAI,SACzCV,EAAAC,EAAAC,cAAA,iBACOF,EAAAC,EAAAC,cAAA,0BADP,wBAGAF,EAAAC,EAAAC,cAAA,KACEC,UAAU,WACVU,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJN,eAQAf,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAT,oBCLKW,MAhBf,WACE,OACEhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,kBAEFF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,0BACeF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,SAAT,QADf,6CCQOY,MAbf,WACE,OACEjB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQc,SAAS,MACflB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACEnB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhB,IACjCN,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWhB,IACrCN,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWX,IACrCX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOG,UAAWN,OCDNO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c59df19a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BAP.a727e950.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Navbar = () => {\n  return (\n    <nav className=\"dt tc mw7 center ma4 pa-3\">\n      <Link className=\"f5-l black bg-animate black-80 dib pa3 ph4-l no-underline\" to=\"/home\">\n        <h1 className=\"f3 fw3\">HOME</h1>\n      </Link>\n      <Link className=\"f5-l black bg-animate black-80 dib pa3 ph4-l no-underline\" to=\"/shop\">\n        <h1 className=\"f3 fw3\">SHOP</h1>\n      </Link>\n      <div className=\"f5-l black bg-animate black-80 dib pa3 ph4-l no-underline\">\n        <h1 className=\"f3 fw3\"> PRESS</h1>\n      </div>\n      <div className=\"f5-l black bg-animate black-80 dib pa3 ph4-l no-underline\">\n        <h1 className=\"f3 fw3\">GALLERY</h1>\n      </div>\n      <div className=\"f5-l black bg-animate black-80 dib pa3 ph4-l no-underline\">\n        <h1 className=\"f3 fw3\">WORK</h1>\n      </div>\n    </nav>\n  );\n};\n","import React from \"react\";\nimport BAP from \"../Images/BAP.jpg\";\nimport { Navbar } from \"../Components/Navbar\";\nimport \"../App.css\";\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <Navbar />\n      <div className=\"container\">\n        <div className=\"landing-img\">\n          <img src={BAP} alt=\"BlackartistParty logo\" />\n        </div>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar } from \"../Components/Navbar\";\nimport \"../App.css\";\nimport logo from \"../logo.svg\";\n\nfunction Shop() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <h1>\n          <Link to=\"/\">Back to home</Link>\n        </h1>\n      </header>\n    </div>\n  );\n}\n\nexport default Shop;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NoMatch() {\n  return (\n    <div>\n      <header>\n        <h1>404</h1>\n      </header>\n      <section>\n        <h3>Looks like you messed up</h3>\n        <h3>\n          If you click <Link to=\"/home\">here</Link> you'll find what you are\n          looking for!\n        </h3>\n      </section>\n    </div>\n  );\n}\nexport default NoMatch;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Pages/Landing\";\nimport Shop from \"./Pages/Shop\";\nimport NoMatch from \"./Pages/NoMatch\";\n\nfunction App() {\n  return (\n    <Router basename=\"/#\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/shop\" component={Shop} />\n        <Route component={NoMatch} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}